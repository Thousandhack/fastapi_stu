代理
在这种情况下拥有代理意味着您可以在处声明一个路径 /app ，但是随后，您可能需要在顶部添加一个层（代理），以将您的 FastAPI 应用程序 放置在 类似 的路径下 /api/v1 。
在这种情况下，原始路径 /app 实际上将在提供 /api/v1/app 。
即使您的应用程序“认为”，它也可以在处使用 /app 。
并且Proxy可以“即时”重新编写路径，以使您的应用程序确信它在处服务 /app 。
到这里为止，一切都会正常进行。
但是，当您打开集成文档时，他们希望获得的是OpenAPI模式 /openapi.json ，而不是 /api/v1/openapi.json 。
因此，前端（在浏览器中运行）将尝试访问 /openapi.json 并且无法获取OpenAPI架构。
因此，需要前端在处查找OpenAPI模式 /api/v1/openapi.json 。
并且还需要返回的JSON OpenAPI模式在 /api/v1/app （位于代理后面） 具有定义的路径， 而不是 /app 。
对于这些情况，可以 openapi_prefix 在 FastAPI 应用程序中 声明一个 参数 。
有关示例，请参见以下有关“安装”的部分。

子应用API 程序
